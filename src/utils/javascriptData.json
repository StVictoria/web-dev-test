{"data": [
    {"id": 1,
    "block": "Основы JavaScript",
    "topic": "Строгий режим",
    "level": "low",
    "question": "Что нужно сделать, чтобы код работал в современном режиме?",
    "answer": "Директива выглядит как строка: 'use strict'. Когда она находится в начале скрипта, весь сценарий работает в «современном» режиме. 'use strict' можно поставить в начале большинства видов функций. Это позволяет включить строгий режим только в конкретной функции. Но обычно люди используют его для всего файла."
    }, 
    {"id": 2,
    "block": "Основы JavaScript",
    "topic": "Строгий режим",
    "level": "low",
    "question": "Как отменить строгий режим use strict?",
    "answer": "Никак. Нет директивы типа 'no use strict', которая возвращала бы движок к старому поведению. Как только мы входим в строгий режим, отменить это невозможно."
    }, 
    {"id": 3,
    "block": "Основы JavaScript",
    "topic": "Переменные",
    "level": "low",
    "question": "Что такое переменная?",
    "answer": "«именованное хранилище» для данных."
    }, 
    {"id": 4,
    "block": "Основы JavaScript",
    "topic": "Переменные",
    "level": "low",
    "question": "Какие есть ограничения касающиеся имён переменных?",
    "answer": "Имя переменной должно содержать только буквы, цифры или символы $ и _. Первый символ не должен быть цифрой."
    }, 
    {"id": 5,
    "block": "Основы JavaScript",
    "topic": "Типы данных",
    "level": "low",
    "question": "Сколько типов данных существует? Перечислить их.",
    "answer": "8 типов данных: number, BigInt, boolean, string, null, undefined, object, Symbol"
    }, 
    {"id": 6,
    "block": "Основы JavaScript",
    "topic": "Типы данных",
    "level": "low",
    "question": "Что такое NaN? В результате чего появляется?",
    "answer": "NaN означает вычислительную ошибку. Это результат неправильной или неопределённой математической операции. Значение NaN «прилипчиво». Любая операция с NaN возвращает NaN."
    }, 
    {"id": 7,
    "block": "Основы JavaScript",
    "topic": "Типы данных",
    "level": "low",
    "question": "Что за тип BigInt? Как записать такое число?",
    "answer": "Тип BigInt был добавлен в JavaScript, чтобы дать возможность работать с целыми числами произвольной длины. Чтобы создать значение типа BigInt, необходимо добавить n в конец числового литерала."
    }, 
    {"id": 8,
    "block": "Основы JavaScript",
    "topic": "Типы данных",
    "level": "low",
    "question": "Что значит null и undefined в JavaScript?",
    "answer": "null - просто специальное значение, которое представляет собой «ничего», «пусто» или «значение неизвестно». undefined означает, что «значение не было присвоено»."
    }, 
    {"id": 9,
    "block": "Основы JavaScript",
    "topic": "Типы данных",
    "level": "low",
    "question": "Какие существуют примитивные типы? Почему они так называются?",
    "answer": "number, BigInt, boolean, string, null, undefined. типы называются «примитивными», потому что их значениями могут быть только простые значения (будь то строка, или число, или что-то ещё)/"
    }, 
    {"id": 10,
    "block": "Основы JavaScript",
    "topic": "Типы данных",
    "level": "low",
    "question": "Как получить тип аргумента?",
    "answer": "C помощью оператора typeof."
    }, 
    {"id": 11,
    "block": "Основы JavaScript",
    "topic": "Типы данных",
    "level": "low",
    "question": "Почему typeof(null)  возвращает “object”?",
    "answer": "Это официально признанная ошибка в typeof, ведущая начало с времён создания JavaScript и сохранённая для совместимости. Конечно, null не является объектом. Это специальное значение с отдельным типом."
    }, 
    {"id": 12,
    "block": "Основы JavaScript",
    "topic": "Взаимодействие: alert, prompt, confirm",
    "level": "low",
    "question": "Что такое модальное окно?",
    "answer": "Понятие модальное означает, что пользователь не может взаимодействовать с интерфейсом остальной части страницы, нажимать на другие кнопки и т.д. до тех пор, пока взаимодействует с окном."
    }, 
    {"id": 13,
    "block": "Основы JavaScript",
    "topic": "Взаимодействие: alert, prompt, confirm",
    "level": "low",
    "question": "Какие аргументы принимает prompt? Что возвращает вызов prompt?",
    "answer": "prompt(title, [default]);",
    "description": ["base - это объект", "name - свойство объекта", "strict - режим исполнения. Является true, если действует строгий режим (use strict)."]
    }, 
    {"id": 14,
    "block": "Основы JavaScript",
    "topic": "Взаимодействие: alert, prompt, confirm",
    "level": "low",
    "question": "Когда определяется значение this?",
    "answer": "Во время исполнения кода"
    }
]}